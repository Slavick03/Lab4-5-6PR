# version: '3.8'

# services:
#   db:
#     image: mysql:8
#     container_name: todo-mysql
#     restart: unless-stopped
#     platform: linux/arm64/v8
#     environment:
#       MYSQL_ROOT_PASSWORD: 123456
#       MYSQL_DATABASE: tododb
#       MYSQL_ROOT_HOST: '%'
#       MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
#     ports:
#       - '3307:3306'
#     networks:
#       - todo-network
#     volumes:
#       - mysql_data:/var/lib/mysql
#     healthcheck:
#       test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
#       interval: 10s
#       retries: 5
#       timeout: 5s

#   backend:
#     build: ./backend
#     container_name: todo-backend
#     restart: unless-stopped
#     depends_on:
#       db:
#         condition: service_healthy
#     environment:
#       DB_HOST: db
#       DB_USER: root
#       DB_PASSWORD: 123456
#       DB_NAME: tododb
#       DB_PORT: 3306
#       SMTP_HOST: mailhog
#       SMTP_PORT: 1025
#       MAILHOG_API: http://mailhog:8025
#     ports:
#       - '3001:3001'
#     networks:
#       - todo-network
#     volumes:
#       - ./backend:/app
#       - /app/node_modules
#     command: ['sh', '-c', 'npm install && node src/server.js']

#   frontend:
#     build:
#       context: ./frontend
#       args:
#         REACT_APP_API_URL: 'http://todo-backend:3001/api'
#     container_name: todo-frontend
#     restart: unless-stopped
#     depends_on:
#       - backend
#     ports:
#       - '3000:3000'
#     networks:
#       - todo-network
#     volumes:
#       - ./frontend:/app
#       - /app/node_modules
#     command:
#       ['sh', '-c', 'npm install && npm run build && serve -s build -l 3000']

#   mailhog:
#     image: mailhog/mailhog
#     container_name: mailhog
#     restart: unless-stopped
#     ports:
#       - '8025:8025'
#       - '1025:1025'
#     networks:
#       - todo-network

# networks:
#   todo-network:

# volumes:
#   mysql_data:

version: '3.8'

services:
  todo-mysql:
    image: mysql:8
    container_name: todo-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: tododb
    ports:
      - '3307:3306'
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-p123456']
      interval: 10s
      timeout: 5s
      retries: 5

  todo-backend:
    build: ./backend
    container_name: todo-backend
    environment:
      DB_HOST: todo-mysql
      DB_USER: root
      DB_PASSWORD: 123456
      DB_NAME: tododb
      DB_PORT: 3306
    ports:
      - '3001:3001'
    depends_on:
      todo-mysql:
        condition: service_healthy

  todo-frontend:
    build: ./frontend
    container_name: todo-frontend
    ports:
      - '3000:3000'
    depends_on:
      - todo-backend
